Still in prototype status


Todo:
=====
pip3 install beautifulsoup4==4.9

https://lxml.de/   #scraping   apt-get install python3-lxml

https://pingouin-stats.org/build/html/index.html

https://erdantic.drivendata.org/stable/

https://geocoder.readthedocs.io/providers/GeoNames.html
pip3 install geocoder

https://www.twilio.com/blog/2017/08/geospatial-analysis-python-geojson-geopandas.html
pip3 install shapely==1.5.17
pip3 install geopandas==0.6.0
##pip3 install geojsonio==0.0.3

https://physipy.readthedocs.io/en/latest/

Deep-Translator


https://jakevdp.github.io/PythonDataScienceHandbook/04.13-geographic-data-with-basemap.html
conda install basemap


https://realpython.com/flask-connexion-rest-api/
https://dev.to/sahilrajput/install-flask-and-create-your-first-web-application-2dba


https://datascience-enthusiast.com/R/pandas_datatable.html
https://www.kaggle.com/sudalairajkumar/getting-started-with-python-datatable
https://towardsdatascience.com/an-overview-of-pythons-datatable-package-5d3a97394ee9
https://datatable.readthedocs.io/en/latest/

https://wiki.ubuntuusers.de/tesseract-ocr/
https://www.howtoforge.com/tutorial/tesseract-ocr-installation-and-usage-on-ubuntu-16-04/
https://github.com/tesseract-ocr/tesseract/wiki
https://tesseract-ocr.github.io/tessdoc/AddOns.html#tesseract-wrappers
https://github.com/sirfz/tesserocr
https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc

https://realpython.com/setting-up-a-simple-ocr-server/
https://github.com/tleyden/open-ocr  (rabbitMQ)

 https://www.scipy.org/
 https://patsy.readthedocs.io/en/latest/overview.html#
 https://www.statsmodels.org
 https://www.statsmodels.org/stable/glm.html
 http://www.science.smith.edu/~jcrouser/SDS293/labs/lab4-py.html

 https://opensource.com/article/20/4/plot-data-python



Install python modules by file
 * pip install -r requirements.txt
 * https://stackoverflow.com/questions/46419607/how-to-automatically-install-required-packages-from-a-python-script-as-necessary/46419642
 * https://github.com/bndr/pipreqs
 * pip freeze > requirements.txt
 * pip list

freeze default packages versions in requirements.coding.txt if not exists!
(similiar to creAssets npm)

https://blog.jetbrains.com/pycharm/2024/06/how-to-move-from-pandas-to-polars/

https://www.kdnuggets.com/7-powerful-python-decorators-to-level-up-your-coding-game
https://www.kdnuggets.com/python-tooling-beyond-pandas-libraries-to-broaden-your-data-science-toolkit
https://docs.jax.dev/en/latest/

https://github.com/uber/h3?uclick_id=634eeb2c-dc35-4026-8476-d03bbffcc8ce
https://www.uber.com/en-DE/blog/h3/

https://www.starlette.io/
https://docs.pydantic.dev/latest/

https://github.com/NVIDIA/warp

DONE:
=====
https://www.scipy.org/
https://patsy.readthedocs.io/en/latest/overview.html#
https://www.statsmodels.org
https://www.statsmodels.org/stable/glm.html
http://www.science.smith.edu/~jcrouser/SDS293/labs/lab4-py.html
https://fastapi.tiangolo.com








